name: NPM set package.json version
description: >-
  Sets the .version of a package.json file to the given parameter, after validating
  it as Semver-compatible

inputs:
  path:
    description: package.json file
    required: false
    default: package.json
  version:
    description: version to set
    required: true

outputs:
  version:
    description: the version that was set after validation
    value: ${{ steps.set-version.outputs.version }}

runs:
  using: composite
  steps:
  - name: Install dependencies
    uses: kagekirin/gha-py-toolbox/actions/pip/install@main
    with:
      packages: >-
        semver

  - id: set-version
    name: Set ${{ inputs.path }} .version to ${{ inputs.version }}
    shell: python
    env:
      inputs_path: ${{ inputs.path }}
      inputs_version: ${{ inputs.version }}
    run: |
      import os, sys, json, semver
      from pathlib import Path

      version = semver.Version.parse(os.getenv("inputs_version"))
      assert version
      print(version)
      if version == None:
          exit(1)

      packageJsonFile = Path(os.getenv("inputs_path"))
      assert packageJsonFile
      if not packageJsonFile.exists():
          exit(2)

      packageJson = json.loads(packageJsonFile.read_text())
      assert packageJson
      print(packageJson["version"])
      if packageJson == None:
          exit(3)

      packageJson["version"] = f"{version}"
      print(packageJson["version"])
      packageJsonFile.write_text(json.dumps(packageJson, indent=2))

      with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
          print(f"version={version}")
          print(f"version={version}", file=fh)
