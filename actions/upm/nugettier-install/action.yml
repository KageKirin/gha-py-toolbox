name: UPM Install NuGettier
description: >-
  GitHub Action to install NuGettier

inputs:
  accept-license:
    description: "[YES|NO] Must be set explicitly to 'YES' to accept the license.\
      \ Install won't proceed without."
    required: false
    default: NO


runs:
  using: composite
  steps:
  - name: Install dependencies
    uses: kagekirin/gha-py-toolbox/actions/pip/install@main
    with:
      packages: >-
        requests

  - id: display-license
    name: Display license
    shell: python
    run: |
      import os, sys, requests

      license = requests.get(
          "https://raw.githubusercontent.com/KageKirin/NuGettier/main/LICENSE"
      )
      print(license.text)

  - id: check-license
    name: Check license acceptation
    shell: python
    env:
      inputs_accept: ${{ inputs.accept-license }}
    run: |
      import os, sys

      accept = str(os.getenv("inputs_accept"))

      if accept.lower() == "yes":
          print("Thank you for accepting the license terms.")
          print("Installation can proceed.")
          exit(0)


      print("Sorry, but you have to explicitly accept the license terms")
      print("by setting accept-license to 'yes'.")
      print("Installation cannot proceed")
      exit(1)

  - id: install-nugettier
    name: Install NuGettier
    uses: kagekirin/gha-py-toolbox/actions/install/dotnet-tool@main
    with:
      packages: NuGettier@prerelease

  - id: fetch-configs
    name: Fetch default configs
    shell: python
    run: |
      import os, sys, requests

      appconfig = requests.get(
          "https://github.com/KageKirin/NuGettier/blob/main/appconfig.json"
      )
      with open("appconfig.json", "w") as fh:
          print(appconfig.text, file=fh)

      netconfig = requests.get(
          "https://github.com/KageKirin/NuGettier/blob/main/.netconfig"
      )
      with open(".netconfig", "w") as fh:
          print(netconfig.text, file=fh)


  - id: add-to-path
    name: Add to PATH if not added yet
    shell: python
    run: |
      import os, sys, re, requests
      from pathlib import Path

      path = os.getenv("PATH")
      pathes = path.split(";") if sys.platform.startswith("win") else path.split(":")

      re_dotnetpath = (
          re.compile(r"\.dotnet\\tools")
          if sys.platform.startswith("win")
          else re.compile(r"\.dotnet/tools")
      )
      if not any([re_dotnetpath.search(p) for p in pathes]):
          with open(os.environ["GITHUB_PATH"], "a") as fh:
              toolspath = Path.join(Path.home(), ".dotnet", "tools")
              print(toolspath)
              print(toolspath, file=fh)

  - id: verify
    name: Verify installation
    shell: python
    run: |
      import os, sys

      print(os.getenv("PATH"))

      which = "where" if sys.platform.startswith("win") else "which"
      os.system(f"{which} dotnet-nugettier")
      os.system(f"dotnet nugettier --version")
