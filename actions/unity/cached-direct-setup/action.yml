name: UNITY cached direct setup
description: >-
  Downloads and installs Unity at the given version/changeset and for the given platform
  using the release tarballs.
  Results are cached for faster workflows.

  This version relies on curl and tar by piping the download/output from curl directly into tar.

  **WARNING: only Linux supported for now**

inputs:
  version:
    description: >-
      Unity version to install.
      Refer to https://unity.com/releases/editor/archive for the correct version.
    required: true
    default: 2021.3.21f1
  changeset:
    description: >-
      Unity changeset to install.
      Refer to https://unity.com/releases/editor/archive for the correct changeset.

      NOTE: The changeset is part of the actual download URL, i.e. https://download.unity3d.com/download_unity/{changeset}
      e.g.: https://download.unity3d.com/download_unity/1b156197d683/LinuxEditorInstaller/Unity-2021.3.21f1.tar.xz
    required: true
    default: 1b156197d683
  components:
    description: >-
      List of Unity components to install.

      Multiline, use whitespace/newline to separate items.
    required: true
    default: |
      Unity
      Linux-IL2CPP
      Linux-Server
      WebGL
  unity-path:
    description: path where to install Unity to
    required: true
    default: .unity
  unity-temp:
    description: temp path where to download Unity installers to
    required: true
    default: .unitysetup

outputs:
  unity-path:
    description: full path to where Unity has been installed.
    value: ${{ steps.bump-version.outputs.unity-path }}

runs:
  using: composite
  steps:
  - name: Install dependencies
    uses: kagekirin/gha-py-toolbox/actions/pip/install@main
    with:
      packages: >-
        requests

  - id: download-url
    name: Generate download URL for Unity ${{ inputs.version }} and ${{ inputs.changeset
      }}
    shell: python
    env:
      unity_changeset: ${{ inputs.changeset }}
      unity_baseurl: https://download.unity3d.com/download_unity/
    run: |
      import os, sys
      from urllib.parse import urlparse, urljoin

      unity_version = str(os.getenv("unity_version"))
      unity_changeset = str(os.getenv("unity_changeset"))
      unity_baseurl = urlparse(os.getenv("unity_baseurl"))

      installer_url = urljoin(unity_baseurl.geturl(), unity_changeset)

      with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
          print(f"url={installer_url}/")
          print(f"url={installer_url}/", file=fh)

  - id: download-unpack-editor
    name: Download Unity Editor from ${{ steps.download-url.outputs.url }}
    shell: python
    env:
      download_url: ${{ steps.download-url.outputs.url }}
      unity_version: ${{ inputs.version }}
      unity_path: ${{ inputs.unity-path }}
    run: |
      import os, sys
      from pathlib import Path
      from urllib.parse import urlparse, urljoin

      unity_path = Path(os.getenv("unity_path"))
      unity_path.mkdir(parents=True, exist_ok=True)
      unity_version = str(os.getenv("unity_version"))
      download_url = str(os.getenv("download_url"))

      editor_url = urlparse(
          urljoin(download_url, f"LinuxEditorInstaller/Unity-{unity_version}.tar.xz")
      )

      basedir = os.getcwd()
      os.chdir(unity_path)
      cmd = f"curl {editor_url.geturl()} | tar xv"
      print(cmd)
      err = os.system(cmd)
      os.chdir(basedir)
      exit(err)

  - id: download-unpack-components
    name: Download Unity Components from ${{ steps.download-url.outputs.url }}
    shell: python
    env:
      download_url: ${{ steps.download-url.outputs.url }}
      unity_version: ${{ inputs.version }}
      unity_components: ${{ inputs.components }}
      unity_path: ${{ inputs.unity-path }}
    run: |
      import os, sys, requests, shutil
      from pathlib import Path
      from urllib.parse import urlparse, urljoin

      unity_path = Path(os.getenv("unity_path"))
      assert unity_path.is_dir()

      unity_version = str(os.getenv("unity_version"))
      unity_components = list(str(os.getenv("unity_components")).split())
      download_url = str(os.getenv("download_url"))

      basedir = os.getcwd()
      os.chdir(unity_path)

      err = 0
      for component in unity_components:
          component_url = urlparse(
              urljoin(
                  download_url,
                  f"LinuxEditorTargetInstaller/UnitySetup-{component}-{unity_version}.tar.xz",
              )
          )
          cmd = f"curl {component_url.geturl()} | tar xv"
          print(cmd)
          err = os.system(cmd)
          if err != 0:
              print(f"failed to to download {component_url.geturl()}")
              break

      os.chdir(basedir)
      exit(err)

  - id: get-unity-exe
    name: Retrieve installed Unity executable
    shell: python
    env:
      unity_path: ${{ inputs.unity-path }}
    run: |
      import os, sys
      from pathlib import Path

      unity_path = Path(os.getenv("unity_path"))

      unities = list(
          filter(
              lambda x: x.is_file() and os.access(x.absolute(), os.X_OK),
              unity_path.rglob("Unity"),
          )
      )
      print(f"executables: {unities}")
      unity_exe = unities[0]

      with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
          print(f"unity={unity_exe.absolute()}")
          print(f"unity={unity_exe.absolute()}", file=fh)
