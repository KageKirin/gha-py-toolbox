name: GH GRAPHQL toggle merge queue
description: >
  Enqueue or dequeue pull request into/from merge queue.

inputs:
  graphql-url:
    description: >
      GitHub (Enterprise) instance GRAPHQL API URL (including protocol).
    required: false
    default: ${{github.graphql_url}}
  token:
    description: >
      GitHub (Enterprise): token with at least "contents:write" permissions for the
      given repository.
    required: false
    default: ${{github.token}}
  pullrequest:
    description: >
      JSON representation of the pull request with at least the fields
      - id
      - headRefOid
      This can be obtained via the ghgql/get-pullrequest(s) actions.
    required: true
  toggle:
    description: >
      bool to control whether to enable or disable automerge on the pull request
    required: true
    default: true


outputs:
  pullrequest:
    description: >
      JSON representation of the pull request.
    value: ${{fromJSON(inputs.toggle) && steps.query-enable.outputs.json || steps.query-disable.outputs.json}}


runs:
  using: composite
  steps:
  - id: mutation-id
    shell: python
    run: |
      ## actions/ghgql/toggle-merge-queue/action.yml#mutation-id
      import os, uuid

      mutation_id = str(uuid.uuid4()).replace("-", "")
      with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
          print(f"id={mutation_id}")
          print(f"id={mutation_id}", file=fh)
  - id: pullrequest-details
    shell: python
    env:
      inputs_pullrequest: ${{inputs.pullrequest}}
    run: |
      ## actions/ghgql/toggle-merge-queue/action.yml#pullrequest-details
      import os, json, pprint

      pullrequest = json.loads(str(os.getenv("inputs_pullrequest")))
      assert pullrequest is not None
      pprint.pp(pullrequest)

      with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
          print(f"id={pullrequest['id']}")
          print(f"id={pullrequest['id']}", file=fh)
          print(f"headRefOid={pullrequest['headRefOid']}")
          print(f"headRefOid={pullrequest['headRefOid']}", file=fh)
          print(f"title={json.dumps(pullrequest['title'])}")
          print(f"title={json.dumps(pullrequest['title'])}", file=fh)
          print(f"body={json.dumps(pullrequest['bodyText'])}")
          print(f"body={json.dumps(pullrequest['bodyText'])}", file=fh)

  - id: query-enable
    if: ${{ fromJSON(inputs.toggle) }}
    uses: kagekirin/gha-py-toolbox/actions/ghgql/query@main
    with:
      token: ${{inputs.token}}
      graphql-query: |
        mutation($mutationId: String!, $pullRequestId: ID!, $branchHeadOid: GitObjectID)
        {
          enqueuePullRequest(input: {
            clientMutationId: $mutationId,
            pullRequestId: $pullRequestId,
            expectedHeadOid: $branchHeadOid,
            jump: false,
          })
          {
            clientMutationId
            mergeQueueEntry
            {
              id
              baseCommit
              headCommit
              enqueuedAt
              enqueuer{login}
              estimatedTimeToMerge
              jump
              mergeQueue
              position
              solo
              state
              pullRequest
              {
                baseRefOid
                baseRefName
                headRefOid
                headRefName
                id
                number
                title
                bodyText
                permalink
                resourcePath
                state
                mergeable
                url
                autoMergeRequest
                {
                  authorEmail
                  commitHeadline
                  commitBody
                  enabledAt
                  enabledBy{login}
                  mergeMethod
                }
                author{login}
              }
            }
          }
        }

      graphql-variables: |
        {
          "mutationId":     "${{steps.mutation-id.outputs.id}}",
          "pullRequestId":  "${{steps.pullrequest-details.outputs.id}}",
          "branchHeadOid":  "${{steps.pullrequest-details.outputs.headRefOid}}"
        }

  - id: query-disable
    if: ${{ !fromJSON(inputs.toggle) }}
    uses: kagekirin/gha-py-toolbox/actions/ghgql/query@main
    with:
      token: ${{inputs.token}}
      graphql-query: |
        mutation($mutationId: String!, $pullRequestId: ID!)
        {
          dequeuePullRequest(input: {
            clientMutationId: $mutationId,
            pullRequestId: $pullRequestId,
          })
          {
            clientMutationId
            mergeQueueEntry
            {
              id
              baseCommit
              headCommit
              enqueuedAt
              enqueuer{login}
              estimatedTimeToMerge
              jump
              mergeQueue
              position
              solo
              state
              pullRequest
              {
                baseRefOid
                baseRefName
                headRefOid
                headRefName
                id
                number
                title
                bodyText
                permalink
                resourcePath
                state
                mergeable
                url
                autoMergeRequest
                {
                  authorEmail
                  commitHeadline
                  commitBody
                  enabledAt
                  enabledBy{login}
                  mergeMethod
                }
                author{login}
              }
            }
          }
        }

      graphql-variables: |
        {
          "mutationId":    "${{steps.mutation-id.outputs.id}}",
          "pullRequestId": "${{steps.pullrequest-details.outputs.id}}"
        }
