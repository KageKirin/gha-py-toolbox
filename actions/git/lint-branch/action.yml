name: GIT lint branch
description: >
  Runs a linter (gitlint) over all commits in the current branch

inputs:
  path:
    description: path from where to run the actions
    required: false
    default: ${{github.workspace}}
  branch:
    description: branch or commit-ish
    required: false
    default: main
  arguments:
    description: >
      additional arguments to pass to push (e.g. --verbose, --silence, --debug)
      DO NOT PASS `--commits` as this will be added to the call.
    required: false
    default: ''

runs:
  using: composite
  steps:
  - name: Install dependencies
    uses: kagekirin/gha-py-toolbox/actions/pip/install@main
    with:
      packages: >-
        gitlint

  - id: lint
    name: Lint
    shell: python
    env:
      inputs_path: ${{inputs.path}}
      inputs_branch: ${{inputs.branch}}
      inputs_arguments: ${{inputs.arguments}}
    run: |
      ## actions/git/lint-branch/action.yml#lint
      import os, sys
      from contextlib import chdir

      branch = str(os.getenv("inputs_branch", ""))
      assert branch is not None

      arguments = str(os.getenv("inputs_arguments", "")).split()
      assert arguments is not None

      os.chdir(os.getenv("GITHUB_WOKRDIR", "."))

      with chdir(str(os.getenv("inputs_path", "."))):
          cmd = " ".join(["gitlint"] + arguments + ["--commits", branch])
          print(cmd, flush=True)
          err = os.waitstatus_to_exitcode(os.system(cmd))
          print("error:", err)
          exit(err)
