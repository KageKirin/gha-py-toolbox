name: UTIL MACRO Update assets
description: >
  Macro action performing the following:
  * update assets by running a given command for each existing file following a glob pattern.
  * search modified assets
  * commit modified assets

inputs:
  path:
    description: path from where to run the actions
    required: false
    default: ${{github.workspace}}

  # Parameters
  files:
    description: >
      Glob pattern(s) for files to update
      Whitespace-separated values.
    required: true
  commands:
    description: >
      Command pattern to run for each file can contain `{{{filename}}}`
      Newline-separated values.
    required: true
  ignore-errors:
    description: >
      Whether to ignore occurring errors, i.e. failing commands.
      If false, this will raise an exception (assert) terminating the action.
    required: true
    default: 'true'


  ## Committer
  commit-username:
    description: >
      Author user.name to use.
      Defaults to triggering_actor
    required: false
    default: ${{ github.workflow }} on behalf of ${{ github.triggering_actor }}
  commit-useremail:
    description: >
      Author user.email to use.
      Defaults actor anonymous email address, `ID+USERNAME@users.noreply.github.com`
    required: false
    default: ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com

  ## Commit message
  commit-message:
    description: >
      Subject to write into patch header
      Pystache template, getting fed {'filename': 'foobar'}
    required: false
    default: ''

  dry-run:
    description: >
      Whether to actually execute the commands for each file.
    required: true
    default: 'true'


outputs:
  commits:
    description: Whitespace-separated list of created commits
    value: ${{ steps.commit-modified.outputs.commits }}


runs:
  using: composite
  steps:
  - id: run-commands
    name: Run commands
    uses: kagekirin/gha-py-toolbox/actions/exec/run-files-commands@main
    with:
      path: ${{ inputs.path }}
      files: ${{ inputs.files }}
      commands: ${{ inputs.commands }}
      ignore-errors: ${{ inputs.ignore-errors }}
      dry-run: ${{ inputs.dry-run }}

  - id: get-modified
    name: Get modified files
    uses: kagekirin/gha-py-toolbox/actions/git/get-modified-files@main
    with:
      path: ${{ inputs.path }}

  - id: commit-modified
    if: ${{ steps.get-modified.outputs.count > 0 }}
    uses: kagekirin/gha-py-toolbox/actions/git/commit-files@main
    with:
      path: ${{ inputs.path }}
      files: ${{ steps.get-modified.outputs.files }}
      commit-username: ${{ inputs.commit-username }}
      commit-useremail: ${{ inputs.commit-useremail }}
      commit-message: ${{ inputs.commit-message }}
