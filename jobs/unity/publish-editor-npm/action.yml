name: JOB NPM Publish Unity Editor package
description: >-
  Job macro to publish Unity Editor as NPM package.

inputs:
  path:
    description: path from where to run the actions
    required: false
    default: ${{github.workspace}}

  package-json:
    description: >
      package.json file describing the package.
    required: false
    default: package.json

  # Unity
  unity-version:
    description: >-
      Unity version to install.
      Refer to https://unity.com/releases/editor/archive for the correct version.
    required: true
    default: 6000.0.41f1
  unity-changeset:
    description: >-
      Unity changeset to install.
      Refer to https://unity.com/releases/editor/archive for the correct changeset.

      NOTE: The changeset is part of the actual download URL, i.e. https://download.unity3d.com/download_unity/{changeset}
      e.g.: https://download.unity3d.com/download_unity/46e447368a18/LinuxEditorInstaller/Unity-6000.0.41f1.tar.xz
    required: true
    default: 46e447368a18
  unity-components:
    description: >-
      List of Unity components to install.

      Multiline, use whitespace/newline to separate items.
      Defaults to '', which is only the default Unity Editor without extra components.

      Available components:

      Linux-IL2CPP
      Linux-Server
      Mac-Mono
      Mac-Server
      Windows-Mono
      Windows-Server
      iOS
      VisionOS
      Android
      WebGL
    required: true
    default: ''

  # publishing
  npm-registry:
    description: >-
      NPM registry to publish on.
      Defaults to **GitHub NPM**.
    required: false
    default: https://npm.pkg.github.com/@${{github.repository_owner}}
  npm-token:
    description: >-
      Authorization token for the above registry.
      GitHub (Enterprise): requires 'packages:write' permissions.
    required: false
    default: ${{github.token}}
  npm-options:
    description: >
      supplementary command line options forwarded to `npm publish`
      whitespace separated list.
    required: false
    default: ''

runs:
  using: composite
  steps:

  - uses: kagekirin/gha-py-toolbox/actions/text/dump-to-file@main
    with:
      file: ${{ inputs.path }}/COMPONENTS.md
      contents: |
        # Unity ${{ inputs.unity-version }} - ${{ inputs.unity-changeset }}

        ${{ inputs.unity-components }}

  - id: log-components-md
    name: Log COMPONENTS.md
    uses: kagekirin/gha-py-toolbox/actions/text/log-file@main
    with:
      file: ${{ inputs.path }}/COMPONENTS.md


  - id: get-package-name
    name: Get Package Name
    uses: kagekirin/gha-py-toolbox/actions/npm/get-name@main
    with:
      path: ${{ inputs.path }}
      package-json: ${{ inputs.package-json }}

  - id: compute-package-name
    name: Compute Package Name
    uses: kagekirin/gha-py-toolbox/actions/unity/compute-package-name@main
    with:
      name: ${{ steps.get-package-name.outputs.name }}
      unity-components: ${{ inputs.unity-components }}

  - id: set-package-name
    name: Set Package Name
    uses: kagekirin/gha-py-toolbox/actions/npm/set-name@main
    with:
      path: ${{ inputs.path }}
      package-json: ${{ inputs.package-json }}
      name: ${{ steps.compute-package-name.outputs.name }}


  - id: compute-package-version
    name: Compute Package Version
    uses: kagekirin/gha-py-toolbox/actions/unity/compute-package-version@main
    with:
      unity-version: ${{ inputs.unity-version }}
      unity-changeset: ${{ inputs.unity-changeset }}
      unity-components: ${{ inputs.unity-components }}

  - id: set-package-version
    name: Set Package Version
    uses: kagekirin/gha-py-toolbox/actions/npm/set-version@main
    with:
      path: ${{ inputs.path }}
      package-json: ${{ inputs.package-json }}
      version: ${{ steps.compute-package-version.outputs.version }}

  - id: log-package-json
    name: Log package.json
    uses: kagekirin/gha-py-toolbox/actions/text/log-file@main
    with:
      file: ${{ inputs.path }}/${{ inputs.package-json }}


  - id: install-unity-requirements
    name: Install Unity Requirements
    uses: kagekirin/gha-py-toolbox/macros/unity/install-requirements@main

  - id: install-unity
    name: Install Unity
    uses: kagekirin/gha-py-toolbox/actions/unity/installer-setup@main
    with:
      version: ${{ inputs.unity-version }}
      changeset: ${{ inputs.unity-changeset }}
      components: ${{ inputs.unity-components }}
      unity-path: ${{ inputs.path }}/unity/native/linux-x64
      unity-temp: ${{ inputs.path }}/.unity-temp
      accept-license: true

  - id: verify-outputs
    name: Verify
    shell: cat {0}
    run: |
      steps.install-unity.outputs.unity-exe
      ${{steps.install-unity.outputs.unity-exe}}

      steps.install-unity.outputs.editor-path
      ${{steps.install-unity.outputs.editor-path}}


  - id: npm-pack
    name: NPM Pack
    uses: kagekirin/gha-py-toolbox/actions/npm/pack@main
    with:
      path: ${{ inputs.path }}
      package-json: ${{ inputs.package-json }}

  - id: npm-publish
    name: Publish NPM package
    uses: kagekirin/gha-py-toolbox/actions/npm/publish@main
    with:
      path: ${{ inputs.path }}
      package-file: ${{ steps.npm-pack.outputs.packagefile }}
      registry: ${{ inputs.npm-registry }}
      token: ${{ inputs.npm-token }}
      access: public
    env:
      GH_NUGET_USER: ${{ github.actor }}
      GH_NUGET_TOKEN: ${{ inputs.npm-token }}
